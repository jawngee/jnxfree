// Creator: Patrick Stein aka jolly@jinx.de


#ifndef DEBUG
#define DEBUG 0
#endif


#ifndef JLog
	#define JLine(format, ...)			([NSString stringWithFormat:[NSString stringWithFormat:@"\t(%08x.%04d)%s %@",self,__LINE__,__FUNCTION__,format] , ##__VA_ARGS__ ])
	#define JLineC(format, ...)			([NSString stringWithFormat:[NSString stringWithFormat:@"\t(%08x.%04d) %s %s(): %@",NULL,__LINE__,__FILE__,__FUNCTION__,format] , ##__VA_ARGS__ ])

	#define JLog(format, ...)			NSLog(@"%@",JLine(format , ##__VA_ARGS__ ))
	#define JLogC(format, ...)			NSLog(@"%@",JLineC(format ,  ##__VA_ARGS__ ))

	#define DJLog		if(DEBUG)JLog
	#define D2JLog		if(DEBUG>1)JLog
	#define D3JLOG		if(DEBUG>2)JLog

	#define DJLOG		if(DEBUG)DJLog(@"");
	#define D2JLOG		if(DEBUG>1)DJLog(@"");
#endif


#ifndef DNSLog
	#define DNSLog		if(DEBUG)JLogC
	#define D2NSLog		if(DEBUG>1)JLogC
#endif



#ifdef DEBUGRETAIN
#define DEBUGRETAINCYCLE	\
- retain\
{\
	[super retain];\
	JLog(@"%d",[self retainCount]);\
	return self;\
}\
\
- (void)release\
{\
	JLog(@"%d",[self retainCount]-1);\
	[super release];\
}\
- autorelease\
{\
	[super autorelease];\
	JLog(@"%d",[self retainCount]);\
	return self;\
}\

#else
#define DEBUGRETAINCYCLE
#endif


#if NDEBUG
#define TIMELOG(nsstring)
#else 
#define TIMELOG(nsstring)	\
{																														\
	static CFAbsoluteTime	timeloglasttime	= 0;																		\
	CFAbsoluteTime			timelogtimenow		= CFAbsoluteTimeGetCurrent();											\
	NSLog(@"%@ %3.2fHz %8.4fms",nsstring,1.0/(timelogtimenow-timeloglasttime),(timelogtimenow-timeloglasttime)*1000.0);	\
	timeloglasttime = timelogtimenow;																									\
}
#endif
